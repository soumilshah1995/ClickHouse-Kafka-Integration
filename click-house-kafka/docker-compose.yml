services:
  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 5s
      timeout: 10s
      retries: 5

  kafka1:
    restart: always
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 9092" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka1:9093,OUTSIDE://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9093,OUTSIDE://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

  kafka2:
    restart: always
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "bash", "-c", "nc -z localhost 9093" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://kafka2:9094,OUTSIDE://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9094,OUTSIDE://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "local"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9093,kafka2:9094"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"

  clickhouse1:
    image: clickhouse/clickhouse-server:24.3.8
    environment:
      REPLICA_NAME: ch1-0
      SHARD_NAME: ch1
    hostname: clickhouse1
    container_name: clickhouse1
    ports:
      - "8123:8123"
      - "9000"
    expose:
      - "8123"
      - "9000"
      - "8001"
    volumes:
      - ./clickhouse:/docker-entrypoint-initdb.d
      - ./clickhouse:/var/lib/clickhouse/user_files
      - ./clickhouse/node/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/node/users.xml:/etc/clickhouse-server/users.xml
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy

  clickhouse1-replica:
    image: clickhouse/clickhouse-server:24.3.8
    environment:
      REPLICA_NAME: ch1-1
      SHARD_NAME: ch1
    hostname: clickhouse1-replica
    container_name: clickhouse1-replica
    ports:
      - "8133:8123"
      - "9000"
    expose:
      - "8123"
      - "9000"
      - "8001"
    volumes:
      - ./clickhouse:/docker-entrypoint-initdb.d
      - ./clickhouse:/var/lib/clickhouse/user_files
      - ./clickhouse/node/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/node/users.xml:/etc/clickhouse-server/users.xml
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy

  clickhouse2:
    image: clickhouse/clickhouse-server:24.3.8
    environment:
      REPLICA_NAME: ch2-0
      SHARD_NAME: ch2
    hostname: clickhouse2
    container_name: clickhouse2
    ports:
      - "8124:8123"
      - "9000"
    expose:
      - "8123"
      - "9000"
      - "8001"
    volumes:
      - ./clickhouse:/docker-entrypoint-initdb.d
      - ./clickhouse:/var/lib/clickhouse/user_files
      - ./clickhouse/node/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/node/users.xml:/etc/clickhouse-server/users.xml
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy

  clickhouse2-replica:
    image: clickhouse/clickhouse-server:24.3.8
    environment:
      REPLICA_NAME: ch2-1
      SHARD_NAME: ch2
    hostname: clickhouse2-replica
    container_name: clickhouse2-replica
    ports:
      - "8134:8123"
      - "9000"
    expose:
      - "8123"
      - "9000"
      - "8001"
    volumes:
      - ./clickhouse:/docker-entrypoint-initdb.d
      - ./clickhouse:/var/lib/clickhouse/user_files
      - ./clickhouse/node/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/node/users.xml:/etc/clickhouse-server/users.xml
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy

  clickhouse3:
    image: clickhouse/clickhouse-server:24.3.8
    environment:
      REPLICA_NAME: ch3-0
      SHARD_NAME: ch3
    hostname: clickhouse3
    container_name: clickhouse3
    ports:
      - "8125:8123"
      - "9000"
    expose:
      - "8123"
      - "9000"
      - "8001"
    volumes:
      - ./clickhouse:/docker-entrypoint-initdb.d
      - ./clickhouse:/var/lib/clickhouse/user_files
      - ./clickhouse/node/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/node/users.xml:/etc/clickhouse-server/users.xml
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy

  clickhouse3-replica:
    image: clickhouse/clickhouse-server:24.3.8
    environment:
      REPLICA_NAME: ch3-1
      SHARD_NAME: ch3
    hostname: clickhouse3-replica
    container_name: clickhouse3-replica
    ports:
      - "8135:8123"
      - "9000"
    expose:
      - "8123"
      - "9000"
      - "8001"
    volumes:
      - ./clickhouse:/docker-entrypoint-initdb.d
      - ./clickhouse:/var/lib/clickhouse/user_files
      - ./clickhouse/node/config.xml:/etc/clickhouse-server/config.xml
      - ./clickhouse/node/users.xml:/etc/clickhouse-server/users.xml
    depends_on:
      zookeeper:
        condition: service_healthy
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
